---
import { Image } from "astro:assets";
import villasMagazine from "@images/villas-magazine-the-kitchen-studio.avif";
import type { ImageMetadata } from "astro";

interface Props {
  title: string;
  subtitle: string;
  featureTitle: string;
  featureDescription: string;
  featurePoints: {
    first: string;
    second: string;
    third: string;
  };
  image?: string | (ImageMetadata & { alt: string });
  imageAlt?: string;
}

const {
  title,
  subtitle,
  featureTitle,
  featureDescription,
  featurePoints,
  image,
  imageAlt = "Villas Magazine Feature",
} = Astro.props;
---

<section class="relative animate-section" data-animate>
  <div class="relative max-w-7xl mx-auto px-4 sm:px-6">
    <div class="py-16 md:py-12">
      <div class="mb-12 text-center opacity-0 translate-y-4 transition-all duration-700 ease-out" data-animate-item>
        <h2 class="text-4xl md:text-5xl font-bold leading-tighter tracking-tighter mb-4 font-heading">
          {title}
        </h2>
        <div class="max-w-3xl mx-auto">
          <p class="text-xl mb-8">
            {subtitle}
          </p>
        </div>
      </div>

      <div class="grid md:grid-cols-2 gap-12 items-center">
        {/* Magazine Cover Side */}
        <div
          class="relative group mx-auto md:mr-0 max-w-sm opacity-0 scale-95 transition-all duration-700 delay-300 ease-out"
          data-animate-item>
          <div
            class="relative overflow-hidden rounded-lg shadow-lg hover:shadow-xl transition duration-300 transform hover:-translate-y-1">
            {
              image ? (
                typeof image === "string" ? (
                  <Fragment set:html={image} />
                ) : (
                  <Image
                    src={image}
                    alt={image.alt}
                    class="w-full h-auto object-cover"
                    quality={80}
                    format="avif"
                    loading="eager"
                  />
                )
              ) : (
                <Image
                  src={villasMagazine}
                  alt={imageAlt}
                  class="w-full h-auto object-cover"
                  quality={80}
                  format="avif"
                  loading="eager"
                />
              )
            }
            <div
              class="absolute inset-0 bg-gradient-to-t from-black/60 via-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300">
            </div>
          </div>
        </div>

        {/* Content Side */}
        <div class="md:pl-8">
          <div
            class="space-y-6 opacity-0 translate-x-4 transition-all duration-700 delay-500 ease-out"
            data-animate-item>
            <h3 class="text-3xl font-bold">
              {featureTitle}
            </h3>
            <p class="text-lg">
              {featureDescription}
            </p>
            <ul class="space-y-3">
              <li
                class="flex items-center space-x-3 opacity-0 transition-opacity duration-500 delay-700"
                data-animate-item>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-5 w-5"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                </svg>
                <span>{featurePoints.first}</span>
              </li>
              <li
                class="flex items-center space-x-3 opacity-0 transition-opacity duration-500 delay-800"
                data-animate-item>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-5 w-5"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                </svg>
                <span>{featurePoints.second}</span>
              </li>
              <li
                class="flex items-center space-x-3 opacity-0 transition-opacity duration-500 delay-900"
                data-animate-item>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-5 w-5"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                </svg>
                <span>{featurePoints.third}</span>
              </li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  // Initialize intersection observer to trigger animations
  const observerOptions = {
    root: null,
    rootMargin: "0px",
    threshold: 0.1,
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        // Add class to trigger animations
        entry.target.querySelectorAll("[data-animate-item]").forEach((item) => {
          item.classList.add("animate-in");
        });
        // Unobserve after animation is triggered
        observer.unobserve(entry.target);
      }
    });
  }, observerOptions);

  // Observe all sections with animations
  document.querySelectorAll("[data-animate]").forEach((section) => {
    observer.observe(section);
  });
</script>

<style>
  .animate-in {
    opacity: 1 !important;
    transform: translate(0, 0) scale(1) !important;
  }
</style>
