---
import Layout from "../../layouts/PageLayout.astro";
import { getAllPosts, getAllTags } from "../../utils/blog";
import type { MetaSEO } from "../../types";
import BlogCard from "~/components/BlogCard.astro";

// Get all blog posts and tags
const posts = await getAllPosts();
const allTags = await getAllTags();

const meta: MetaSEO = {
  title: "Blog | The Kitchen Studio",
  description: "Διαβάστε τα τελευταία άρθρα και συμβουλές για την κουζίνα σας.",
  ogType: "website",
};

// Define render helpers
const hasFeaturedPost = posts.length > 0 && posts[0].data.featured;
const mainPosts = hasFeaturedPost ? posts.slice(1) : posts;
---

<Layout {meta}>
  <section class="px-4 py-16 sm:px-6 mx-auto lg:px-8 lg:py-20 max-w-6xl">
    <div class="text-center mb-16 fadeIn">
      <h1 class="font-bold font-heading text-4xl md:text-5xl leading-tight tracking-tight mb-4">
        The Kitchen Studio Journal
      </h1>
      <p class="text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto">
        Σκέψεις, ιδέες και συμβουλές για την κουζίνα των ονείρων σας
      </p>
    </div>

    {
      posts.length > 0 ? (
        <div>
          {hasFeaturedPost && (
            <div class="mb-20 fadeIn" style="animation-delay: 0.2s">
              <BlogCard post={posts[0]} variant="featured" />
            </div>
          )}

          {allTags.length > 0 && (
            <div class="flex overflow-x-auto pb-4 mb-8 gap-2 scrollbar-hide">
              <button
                id="all-tag"
                class="tag-filter active whitespace-nowrap px-4 py-2 rounded-full text-sm font-medium bg-gray-100 text-gray-800 hover:bg-gray-200 dark:bg-gray-800 dark:text-gray-200 dark:hover:bg-gray-700 transition-colors">
                Όλα
              </button>
              {allTags.map((tag) => (
                <button
                  class="tag-filter whitespace-nowrap px-4 py-2 rounded-full text-sm font-medium bg-gray-100 text-gray-800 hover:bg-gray-200 dark:bg-gray-800 dark:text-gray-200 dark:hover:bg-gray-700 transition-colors"
                  data-tag={tag}>
                  {tag}
                </button>
              ))}
            </div>
          )}

          {mainPosts.length > 0 && (
            <div>
              <h2
                class="text-2xl font-bold mb-8 pb-2 border-b border-gray-200 dark:border-gray-800 fadeIn"
                style="animation-delay: 0.3s">
                Τελευταία Άρθρα
              </h2>
              <div class="grid sm:grid-cols-2 lg:grid-cols-3 gap-6" id="posts-grid">
                {mainPosts.map((post, index) => (
                  <div
                    class="fadeIn"
                    style={`animation-delay: ${0.4 + index * 0.1}s`}
                    data-tags={post.data.tags?.join(",") || ""}>
                    <BlogCard post={post} />
                  </div>
                ))}
              </div>
            </div>
          )}
        </div>
      ) : (
        <div class="text-center p-12 border border-gray-100 dark:border-gray-800 rounded-lg bg-gray-50 dark:bg-gray-900 fadeIn">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-16 w-16 mx-auto text-gray-400 mb-6"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor">
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="1.5"
              d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v10m2 4h-4m-1-9H9M7 16h6"
            />
          </svg>
          <h2 class="text-2xl font-bold mb-2 text-gray-700 dark:text-gray-300">Δεν υπάρχουν ακόμη άρθρα</h2>
          <p class="text-lg text-gray-600 dark:text-gray-400">Σύντομα θα προστεθούν νέα άρθρα στο blog μας.</p>
        </div>
      )
    }
  </section>
</Layout>

<style>
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .fadeIn {
    opacity: 0;
    animation: fadeIn 0.8s ease-out forwards;
  }

  /* Hide scrollbar for Chrome, Safari and Opera */
  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }

  /* Hide scrollbar for IE, Edge and Firefox */
  .scrollbar-hide {
    -ms-overflow-style: none; /* IE and Edge */
    scrollbar-width: none; /* Firefox */
  }

  /* Active tag styling */
  .tag-filter.active {
    background-color: #f97316; /* orange-500 */
    color: white;
  }

  .dark .tag-filter.active {
    background-color: #f97316; /* orange-500 */
    color: white;
  }
</style>

<script>
  // Filter blog posts by tag
  const tagButtons = document.querySelectorAll(".tag-filter");
  const postsGrid = document.getElementById("posts-grid");
  const postItems = postsGrid?.querySelectorAll("[data-tags]");

  tagButtons.forEach((button) => {
    button.addEventListener("click", () => {
      // Remove active class from all buttons
      tagButtons.forEach((btn) => btn.classList.remove("active"));

      // Add active class to the clicked button
      button.classList.add("active");

      const selectedTag = (button as HTMLElement).dataset.tag;

      if (!selectedTag) {
        // Show all posts for "All" tag
        postItems?.forEach((item) => {
          (item as HTMLElement).style.display = "block";
        });
      } else {
        // Filter posts based on tag
        postItems?.forEach((item) => {
          const itemTags = (item as HTMLElement).dataset.tags?.split(",") || [];
          if (itemTags.includes(selectedTag)) {
            (item as HTMLElement).style.display = "block";
          } else {
            (item as HTMLElement).style.display = "none";
          }
        });
      }
    });
  });
</script>
